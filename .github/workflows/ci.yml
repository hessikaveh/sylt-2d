name: Cargo Build & Test

on:
  [push, pull_request]

env:
  CARGO_TERM_COLOR: always

jobs:
  build_and_test:
    name: Rust Project - ${{ matrix.toolchain }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        toolchain:
          - stable
          - nightly

    steps:
      - uses: actions/checkout@v4

      - name: Set up Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.toolchain }}
          components: clippy

      - name: Run Clippy (Nightly Only)
        if: matrix.toolchain == 'nightly'
        run: cargo clippy -- -A clippy::all

      - name: Build project
        run: cargo build --verbose

      - name: Run tests
        run: cargo test --verbose | tee test_output.txt

      - name: Upload Test Output
        uses: actions/upload-artifact@v3
        with:
          name: test_output-${{ matrix.toolchain }}
          path: test_output.txt

      - name: Summarize Test Results
        if: always()
        run: |
          # Use a more robust approach to count tests and results
          total_tests=$(grep "^test .* \.\.\. (ok|FAILED)$" test_output.txt | wc -l)
          passed_tests=$(grep "^test .* \.\.\. ok$" test_output.txt | wc -l)
          failed_tests=$(grep "^test .* \.\.\. FAILED$" test_output.txt | wc -l)

          echo "## Test Summary" >> $GITHUB_STEP_SUMMARY
          echo "| Total Tests | Passed | Failed |" >> $GITHUB_STEP_SUMMARY
          echo "|-------------|--------|--------|" >> $GITHUB_STEP_SUMMARY
          echo "| $total_tests | $passed_tests | $failed_tests |" >> $GITHUB_STEP_SUMMARY

          if [ "$failed_tests" -gt 0 ]; then
            echo "## Failed Tests" >> $GITHUB_STEP_SUMMARY
            grep "^test .* ... FAILED$" test_output.txt | while read -r line; do
              test_name=$(echo "$line" | awk '{print $2}')
              # Capture the output related to the failed test (improved)
              failure_output=$(grep -A 1000 "$test_name" test_output.txt | grep -v "$test_name" | grep -v '^--$' | head -n 20) # Limit to 20 lines
              echo "### $test_name" >> $GITHUB_STEP_SUMMARY
              echo "```" >> $GITHUB_STEP_SUMMARY
              echo "$failure_output" >> $GITHUB_STEP_SUMMARY
              echo "```" >> $GITHUB_STEP_SUMMARY
            done
            exit 1
          fi
